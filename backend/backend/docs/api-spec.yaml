openapi: 3.0.3
info:
  title: BuyPilot API
  description: Semi-automated purchase and forwarding system API
  version: 1.0.0
  contact:
    name: BuyPilot Support
servers:
  - url: http://localhost:4070
    description: Local development
  - url: https://your-backend.railway.app
    description: Production

paths:
  /health:
    get:
      summary: Health check
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  status:
                    type: string
                    example: healthy

  /api/v1/orders:
    get:
      summary: List orders
      tags:
        - Orders
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [PENDING, SUPPLIER_ORDERING, ORDERED_SUPPLIER, DONE]
        - name: platform
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'

  /api/v1/orders/{orderId}:
    get:
      summary: Get order details
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/events/order-created:
    post:
      summary: Create new order
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  data:
                    type: object
                    properties:
                      order_id:
                        type: string
                        format: uuid
                      status:
                        type: string

  /api/v1/orders/{orderId}/actions/execute-purchase:
    post:
      summary: Execute purchase with supplier
      tags:
        - Actions
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutePurchaseRequest'
      responses:
        '202':
          description: Purchase execution initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  data:
                    type: object
                    properties:
                      job_id:
                        type: string
                      next_status:
                        type: string

  /api/v1/orders/{orderId}/actions/send-to-forwarder:
    post:
      summary: Send order to forwarder
      tags:
        - Actions
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Idempotency-Key
          in: header
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendToForwarderRequest'
      responses:
        '202':
          description: Forwarder job initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  data:
                    type: object
                    properties:
                      job_id:
                        type: string
                      forwarder_id:
                        type: string

  /api/v1/webhooks/supplier:
    post:
      summary: Supplier webhook callback
      tags:
        - Webhooks
      parameters:
        - name: X-Signature
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum: [order.confirmed, order.shipped, order.cancelled]
                supplier_order_id:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Webhook processed

  /api/v1/webhooks/forwarder:
    post:
      summary: Forwarder webhook callback
      tags:
        - Webhooks
      parameters:
        - name: X-Signature
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  type: string
                  enum: [job.received, job.in_transit, job.delivered]
                forwarder_job_id:
                  type: string
      responses:
        '200':
          description: Webhook processed

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum: [PENDING, SUPPLIER_ORDERING, ORDERED_SUPPLIER, DONE, FAILED]
        platform:
          type: string
        platform_order_ref:
          type: string
        items:
          type: array
          items:
            type: object
        buyer:
          type: object
        created_at:
          type: string
          format: date-time

    OrderListResponse:
      type: object
      properties:
        ok:
          type: boolean
        data:
          type: object
          properties:
            orders:
              type: array
              items:
                $ref: '#/components/schemas/Order'
            total:
              type: integer
            limit:
              type: integer
            offset:
              type: integer

    OrderResponse:
      type: object
      properties:
        ok:
          type: boolean
        data:
          $ref: '#/components/schemas/Order'

    CreateOrderRequest:
      type: object
      required:
        - platform
        - platform_order_ref
        - items
        - buyer
      properties:
        platform:
          type: string
        platform_order_ref:
          type: string
        items:
          type: array
          items:
            type: object
            properties:
              product_source_url:
                type: string
              qty:
                type: integer
              price:
                type: number
        buyer:
          type: object
          properties:
            name:
              type: string
            phone:
              type: string
            address1:
              type: string
            zip:
              type: string
            country:
              type: string

    ExecutePurchaseRequest:
      type: object
      properties:
        payment_method:
          type: object
          properties:
            type:
              type: string
              enum: [balance, card, transfer]
        constraints:
          type: object
          properties:
            max_price_delta_pct:
              type: number

    SendToForwarderRequest:
      type: object
      properties:
        forwarder_id:
          type: string
        options:
          type: object
          properties:
            insure:
              type: boolean
            declared_value:
              type: number

    ErrorResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
